{"version":3,"sources":["context/SocketContext.js","hooks/useSocket.js","components/BandAdd.js","components/BandChart.js","components/BandList.js","pages/HomePage.js","BandNameApp.js","index.js"],"names":["SocketContext","createContext","SocketProvider","children","serverPath","socket","useMemo","io","connect","transports","useState","online","setOnline","useEffect","connected","on","useSocket","bands","setBands","off","Provider","value","BandAdd","useContext","band","addBand","addNewBand","name","console","log","emit","onSubmit","evt","preventDefault","trim","length","alert","className","placeholder","onChange","target","BandChart","createGraph","ctx","document","getElementById","Chart","type","data","labels","map","datasets","label","votes","backgroundColor","borderColor","borderWidth","options","scales","xAxes","stacked","id","BandList","onClick","newName","handleName","onBlur","HomePage","BandNameApp","ReactDOM","render"],"mappings":"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","file":"static/js/main.3d2cf4c7.chunk.js","sourcesContent":["import  React, { createContext, useEffect, useState } from \"react\";\nimport { useSocket } from \"../hooks/useSocket\";\n\n\nexport const SocketContext = createContext();\n\n\nexport const SocketProvider = ( { children } ) => {\n\n    const { online, socket } = useSocket( 'http://localhost:5000' ) ;\n\n    const [ bands, setBands ] = useState( [] )\n\n    useEffect( () => {\n\n        socket.on('current-band', ( bands ) => {\n            setBands( bands )\n            })\n    \n        return () => socket.off('current-band')\n\n    }, [ socket ])     \n\n\n\n    return (\n\n     <SocketContext.Provider value={{ socket, online, bands, setBands }} >\n            { children }\n     </SocketContext.Provider>\n\n    )\n\n\n\n}","import { useEffect, useMemo, useState } from \"react\";\nimport { io } from \"socket.io-client\";\n\n\n\n\nexport const useSocket = ( serverPath ) => {\n\n    const socket = useMemo( () => io.connect( serverPath ,{\n        transports : ['websocket'] \n      }), [ serverPath ] ) \n\n    const [ online, setOnline ] = useState( false )\n      \n\n    useEffect( () => {\n\n        setOnline( socket.connected )\n\n    }, [ socket ] )\n    \n    useEffect( () => {\n\n        socket.on( 'connect', () => {\n        setOnline( true )\n        } )\n\n\n    }, [ socket ]  )\n\n    useEffect( () => {\n\n        socket.on( 'disconnect', () => {\n        setOnline( false )\n        } )\n\n    }, [ socket ] )\n\n    return {\n        socket,\n        online\n    }\n}","import React, { useContext, useState } from 'react'\nimport { SocketContext } from '../context/SocketContext'\n\nexport const BandAdd = () => {\n\n    const { socket } = useContext( SocketContext )\n\n\n    const [ band, addBand ] = useState( '' )\n\n    const handleForm = (evt ) => {\n        \n        evt.preventDefault();\n\n        if ( band.trim().length >= 2 ) {\n\n            addNewBand( band )\n            addBand( '' )\n\n        }else{\n            alert( 'No puede enviar le formulari vacÃ­o' )\n        } \n    }\n\n    const addNewBand = ( name ) => {\n        console.log('new band')\n    \n        socket.emit( 'add-new-band',{ name })\n    \n      }\n   \n    return (\n        <>\n\n            <h3> Add Band </h3>\n\n            <form\n              onSubmit={  handleForm }\n            >\n                <input\n                value={ band }\n                className='form-control'\n                placeholder='Add new newBand'\n                onChange={ ( evt ) => addBand( evt.target.value ) }               \n                />\n            </form>\n\n        </>\n    )\n}\n","import React, { useContext, useEffect } from 'react';\nimport { Chart } from \"chart.js\";\nimport { SocketContext } from \"../context/SocketContext\";\n\nexport const BandChart = () => {\n\n    const { bands } = useContext( SocketContext )\n\n\n    useEffect( () => {\n\n        createGraph( bands )\n\n\n\n    }, [ bands ] )\n\n\n    const createGraph = ( bands = [] ) => {\n\n        const ctx = document.getElementById('myChart');\n        \n        const myChart = new Chart(ctx, {\n            type: 'horizontalBar',\n            data: {\n                labels: bands.map( band => band.name ) ,\n                datasets: [{\n                    label: '# of Votes',\n                    data: bands.map( band => band.votes ),\n                    backgroundColor: [\n                        'rgba(255, 99, 132, 0.2)',\n                        'rgba(54, 162, 235, 0.2)',\n                        'rgba(255, 206, 86, 0.2)',\n                        'rgba(75, 192, 192, 0.2)',\n                        'rgba(153, 102, 255, 0.2)',\n                        'rgba(255, 159, 64, 0.2)'\n                    ],\n                    borderColor: [\n                        'rgba(255, 99, 132, 1)',\n                        'rgba(54, 162, 235, 1)',\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(75, 192, 192, 1)',\n                        'rgba(153, 102, 255, 1)',\n                        'rgba(255, 159, 64, 1)'\n                    ],\n                    borderWidth: 1\n                }]\n            },\n            options: {\n                scales: {\n                    xAxes: [{\n                        stacked : true\n                    }]\n                }\n            }\n        });\n\n\n\n    }\n\n\n   \n      \n\n      return (\n          <>\n            <canvas id=\"myChart\" ></canvas>\n          </>\n      )\n   \n    }","import React, { useContext } from 'react'\nimport { SocketContext } from '../context/SocketContext'\n\nexport const BandList = () => {\n\n    \n    // const [ bands, setBands ] = useState( [] )\n    \n    const { socket , bands , setBands } = useContext( SocketContext )\n\n\n    // useEffect( () => {\n\n    //     socket.on('current-band', ( bands ) => {\n    //         setBands( bands )\n    //         })\n    \n    //     return () => socket.off('current-band')\n\n    // }, [ socket ])                      \n\n\n\n    const handleName = ( evt, id ) => {\n       \n        const newName = evt.target.value;\n\n        setBands( bands =>  bands.map( band => {\n                \n            if ( band.id === id  ){\n                    band.name = newName\n                }\n                return band\n            })\n        )\n    }\n\n    const onLossesFocus = ( id, name ) => {\n        socket.emit( 'change-name' , { id , name });\n    }\n\n    const vote = ( id ) => {\n        console.log('votar - app');\n        socket.emit( 'votar-band', id );\n     }\n     const removeBand = ( id ) => {\n\n        console.log('remove band')\n        socket.emit( 'remove-band', id )\n      }\n    \n\n    const createRow = () =>  {\n\n\n\n        return (\n            bands.map( band => (\n                <tr key={ band.id } >\n                    <td>\n                        <button \n                        className=\"btn btn-primary\"\n                        onClick={ () => vote( band.id ) }\n                        >+1</button>\n                    </td>\n                    <td>\n                        <input\n                        className=\"form-control\"\n                        value={ band.name }\n                        onChange={ ( evt ) =>  handleName( evt, band.id ) }\n                        onBlur={ () => onLossesFocus( band.id, band.name ) }\n                        />\n                    </td>\n                    <td> <h3> { band.votes } </h3> </td>\n                    <td> \n                        <button\n                        className=\"btn btn-danger\"\n                        onClick={ () => removeBand( band.id ) }\n                        > Delete </button>\n                     </td>\n                </tr>\n            )\n        )\n    )\n    }\n    \n    \n    return (\n        <>\n            <table className=\"table table-stripped\" >\n                <thead>\n                    <tr>\n                        <th></th>\n                        <th>Name</th>\n                        <th>Votes</th>\n                        <th>Delete</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    { createRow() }\n                </tbody>\n            </table>   \n        </>\n    )\n}\n","import React, { useContext } from \"react\";\nimport { BandAdd } from \"../components/BandAdd\";\nimport { BandChart } from \"../components/BandChart\";\n\n// import { BandAdd } from \"./components/BandAdd\";\nimport { BandList } from \"../components/BandList\";\nimport { SocketContext } from \"../context/SocketContext\";\n\n\n\nfunction HomePage() {\n\n\n  const { online } = useContext( SocketContext )\n\n  return (\n    <div className=\"container\">\n\n        <div className='alert' >\n\n            <p>\n              Service status:\n              {\n                (online)\n              ? <span className='text-success' >Online</span>\n              : <span className='text-danger' >Offline</span>\n              }\n\n              \n            </p>\n\n          <h1> Band Name </h1>\n           \n          <hr/>\n              <div className='row'>\n                <div className='col'>\n                <BandChart />\n                </div>\n              </div>\n\n            <div className='row'>\n                <div className='col-8'>\n                    <BandList />\n                </div>\n                <div className='col-4'>\n                    <BandAdd />\n                </div>\n            \n            </div>\n\n\n        </div>\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from 'react'\nimport { SocketProvider } from './context/SocketContext'\nimport HomePage from './pages/HomePage'\n\nexport const BandNameApp = () => {\n    return (\n        <SocketProvider>\n            <HomePage />\n        </SocketProvider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BandNameApp } from './BandNameApp';\n\nReactDOM.render(\n    <BandNameApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}